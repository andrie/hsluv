// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// code.cpp
                                                                                                              doubles cpp_rgb_to_hsluv(doubles rgb);
extern "C" SEXP _hsluv_cpp_rgb_to_hsluv(SEXP rgb) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_rgb_to_hsluv(cpp11::as_cpp<cpp11::decay_t<doubles>>(rgb)));
  END_CPP11
}
// code.cpp
                                                                                                              doubles cpp_hsluv_to_rgb(doubles hsluv);
extern "C" SEXP _hsluv_cpp_hsluv_to_rgb(SEXP hsluv) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_hsluv_to_rgb(cpp11::as_cpp<cpp11::decay_t<doubles>>(hsluv)));
  END_CPP11
}
// code.cpp
doubles cpp_hex_to_rgb(std::string hex);
extern "C" SEXP _hsluv_cpp_hex_to_rgb(SEXP hex) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_hex_to_rgb(cpp11::as_cpp<cpp11::decay_t<std::string>>(hex)));
  END_CPP11
}
// code.cpp
std::string cpp_rgb_to_hex(doubles rgb);
extern "C" SEXP _hsluv_cpp_rgb_to_hex(SEXP rgb) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_rgb_to_hex(cpp11::as_cpp<cpp11::decay_t<doubles>>(rgb)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_hsluv_cpp_hex_to_rgb",   (DL_FUNC) &_hsluv_cpp_hex_to_rgb,   1},
    {"_hsluv_cpp_hsluv_to_rgb", (DL_FUNC) &_hsluv_cpp_hsluv_to_rgb, 1},
    {"_hsluv_cpp_rgb_to_hex",   (DL_FUNC) &_hsluv_cpp_rgb_to_hex,   1},
    {"_hsluv_cpp_rgb_to_hsluv", (DL_FUNC) &_hsluv_cpp_rgb_to_hsluv, 1},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_hsluv(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
